import { Telegraf } from "telegraf";
import dotenv from "dotenv";
import OpenAI from "openai";
import PROMPT from "./prompt";

dotenv.config();

if (!process.env.TELEGRAM_BOT_TOKEN) {
  throw new Error("Brak tokena TELEGRAM_BOT_TOKEN w .env!");
}

const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN);

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

console.log("ğŸš€ Bot siÄ™ uruchamia...");

bot.start((ctx) => {
  ctx.reply("CzeÅ›Ä‡! Jestem botem AI. MoÅ¼esz mi zadaÄ‡ pytanie.");
});

bot.on("text", async (ctx) => {
  const userMessage = ctx.message.text;

  try {
    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: PROMPT,
        },
        {
          role: "user",
          content: userMessage,
        },
      ],
    });

    // BezpoÅ›redni dostÄ™p do 'response.choices[0]'
    const aiResponse =
      response.choices[0]?.message?.content || "Nie mogÄ™ odpowiedzieÄ‡.";
    ctx.reply(aiResponse);
  } catch (error) {
    console.error("BÅ‚Ä…d OpenAI:", error);
    ctx.reply("WystÄ…piÅ‚ problem z AI. SprÃ³buj ponownie pÃ³Åºniej.");
  }
});

// Uruchomienie bota
bot.launch();
console.log("âœ… Bot dziaÅ‚a! Oczekuje na wiadomoÅ›ci...");
